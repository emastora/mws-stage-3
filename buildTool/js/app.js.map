{"version":3,"sources":["app.js"],"names":["registerSW","navigator","register","console","log","err","window","addEventListener","connectionStatus","connected","elAlert","document","getElementById","parentElement","removeChild","reviews","review","forEach","DBHelper","removeOfflineReview","checkOfflineFavourites","then","favourites","removeOfflineFavourite","favourite","offlineAlert","createElement","id","setAttribute","offlineAlertText","onLine"],"mappings":"aAGA,SAASA,aACD,kBAAmBC,WAD3BA,UAASD,cACDE,SAAA,UACAD,KAGqBE,WAAYA,QAAAC,IAAA,8BACzB,SAAAC,GAAcF,QAAAC,IAAA,sCAAAC,KAK9BC,OAAOC,iBAAiB,OAAQ,WAAhCD,eAOI,IAAAE,iBAAe,SAAAC,GACX,GAAAA,EAAIC,CACJ,IAAIA,EAASC,SAAAC,eAAA,gBACTF,GACHA,EAAAG,cAAAC,YAAAJ,GAEGK,SAAAA,sBAAiBC,KAAD,SAAAD,GAAAA,EAAAE,QAAYC,SAAAA,GAAAA,OAASC,SAAAA,oBAArBH,OACnBE,SAFDE,yBAAAC,KAAA,SAAAC,GAGAJ,EAASE,QAAAA,SAAAA,GAAAA,OAATF,SAAuCK,uBAAcC,WAC9B,CAAA,IAAAC,EAAnBd,SAAAe,cAAA,KACHD,EAFDE,GAAA,eARJF,EAWOG,aAAA,OAAA,SACH,IAAIH,EAAed,SAASe,eAA5B,qBACAD,EAAaE,YAAKE,GAClBJ,SAAAA,KAAaG,YAAaH,KAI7BnB,OAAAC,iBAAA,OAAA,WAnBLP,aAwBQC,UAAU6B,OAFXvB,kBAAiB,GAEhBN,kBAAJ,KAICK,OAAAC,iBAAA,SAAA,WAAA,OAAAC,kBAAA,KAKLF,OAAOC,iBAAiB,UAAW,WAAA,OAAMC,kBAAiB","file":"app.js","sourcesContent":["/**\n * Service Worker\n */\nfunction registerSW() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker\n            .register('/sw.js')\n            .then(\n                function() { console.log(\"Service Worker Registered\"); },\n                function(err) { console.log(\"Service Worker Registration Error: \", err); }\n            );\n    }\n}\n\nwindow.addEventListener('load', function() {\n    registerSW();\n});\n\n\n\nconst connectionStatus = (connected) => {\n    if (connected) {\n        let elAlert = document.getElementById('offlinealert');\n        if (elAlert) {\n            elAlert.parentElement.removeChild(elAlert);\n        }\n        DBHelper.checkOfflineReviews().then(reviews => {\n            reviews.forEach((review) => DBHelper.removeOfflineReview(review));\n        })\n        DBHelper.checkOfflineFavourites().then(favourites => {\n            favourites.forEach((favourite) => DBHelper.removeOfflineFavourite(favourite));\n        })\n    } else {\n        let offlineAlert = document.createElement('p');\n        offlineAlert.id = 'offlinealert';\n        offlineAlert.setAttribute('role', 'alert');\n        let offlineAlertText = document.createTextNode(\"You are offline!.\");\n        offlineAlert.appendChild(offlineAlertText);\n        document.body.appendChild(offlineAlert);\n    }\n}\n\nwindow.addEventListener('load', () => {\n    registerSW();\n    if (navigator.onLine) {\n        connectionStatus(true)\n    } else {\n        connectionStatus(false)\n    }\n});\n\nwindow.addEventListener('online', () => connectionStatus(true));\n\nwindow.addEventListener('offline', () => connectionStatus(false));"]}