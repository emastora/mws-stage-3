{"version":3,"sources":["app.js"],"names":["registerSW","navigator","register","console","log","err","connectionStatus","connected","document","getElementById","elAlert","parentElement","removeChild","DBHelper","checkOfflineReviews","then","reviews","removeOfflineReview","review","checkOfflineFavourites","favourites","forEach","favourite","removeOfflineFavourite","createElement","offlineAlert","id","setAttribute","offlineAlertText","createTextNode","appendChild","onLine","addEventListener","window"],"mappings":"aAGA,SAASA,aACD,kBAAmBC,WAD3BA,UAASD,cACDE,SAAA,UACAD,KAGqBE,WAAYA,QAAAC,IAAA,8BACzB,SAAAC,GAAcF,QAAAC,IAAA,sCAAAC,KAS9B,IAAMC,iBAAmB,SAACC,GAApBD,GAAAA,EAAAA,CACEC,IAAAA,EAAWC,SAAAC,eAAA,gBACPC,GACAA,EAAJC,cAAaC,YAAAF,GAEZG,SAAAC,sBAAAC,KAAA,SAAAC,GACDH,EAASC,QAAAA,SAAAA,GAAAA,OAAsBC,SAAKE,oBAAWC,OAC3BL,SAAAM,yBAAqBF,KAAAA,SAAAA,GAArBG,EAAhBC,QAAA,SAAAC,GAAA,OAAAT,SAAAU,uBAAAD,WAEJT,CACIO,IAAAA,EAAWC,SAAQG,cAAA,KAAAC,EAAAC,GAAeb,eAAfY,EAAnBE,aAAA,OAAA,SACH,IAFDC,EAAApB,SAAAqB,eAAA,YARJJ,EAWOK,YAAAF,GACHpB,SAAIiB,KAAAA,YAAejB,KAInBiB,OAAAA,iBAAaK,OAAb,WACAtB,aACHP,UAAA8B,OAnBLzB,kBAAA,GAsBO0B,kBAAiB,KAInBC,OAFDD,iBAEO,SAAA,WAAA,OAAA1B,kBAAA,KAEN2B,OAAAD,iBAAA,UAAA,WAAA,OAAA1B,kBAAA","file":"app.js","sourcesContent":["/**\n * Service Worker\n */\nfunction registerSW() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker\n            .register('/sw.js')\n            .then(\n                function() { console.log(\"Service Worker Registered\"); },\n                function(err) { console.log(\"Service Worker Registration Error: \", err); }\n            );\n    }\n}\n\n// window.addEventListener('load', function() {\n//     registerSW();\n// });\n\nconst connectionStatus = (connected) => {\n    if (connected) {\n        let elAlert = document.getElementById('offlinealert');\n        if (elAlert) {\n            elAlert.parentElement.removeChild(elAlert);\n        }\n        DBHelper.checkOfflineReviews().then(reviews => {\n            reviews.forEach((review) => DBHelper.removeOfflineReview(review));\n        })\n        DBHelper.checkOfflineFavourites().then(favourites => {\n            favourites.forEach((favourite) => DBHelper.removeOfflineFavourite(favourite));\n        })\n    } else {\n        let offlineAlert = document.createElement('p');\n        offlineAlert.id = 'offlinealert';\n        offlineAlert.setAttribute('role', 'alert');\n        let offlineAlertText = document.createTextNode(\"Offline!\");\n        offlineAlert.appendChild(offlineAlertText);\n        document.body.appendChild(offlineAlert);\n    }\n}\n\nwindow.addEventListener('load', () => {\n    registerSW();\n    if (navigator.onLine) {\n        connectionStatus(true)\n    } else {\n        connectionStatus(false)\n    }\n});\n\nwindow.addEventListener('online', () => connectionStatus(true));\n\nwindow.addEventListener('offline', () => connectionStatus(false));"]}