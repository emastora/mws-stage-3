{"version":3,"sources":["idb.js"],"names":["promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","prototype","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","value","Cursor","Index","index","_index","_cursor","cursor","complete","store","idbTransaction","Transaction","_tx","oncomplete","onabort","ObjectStore","getAll","oldVersion","instance","transaction","DB","db","_db","IDBIndex","IDBCursor","methodName","IDBObjectStore","_request","_store","IDBTransaction","UpgradeDB","callback","createObjectStore","items","IDBDatabase","upgradeCallback","funcName","exports","replace","arr","exp","Array","slice","call","length","nativeObject","query","count","iterateCursor","push","undefined","continue","open","name","version","indexedDB","onupgradeneeded","event","delete","module","default","self","idb"],"mappings":"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","file":"idb.js","sourcesContent":["'use strict';\n\n(function() {\n    function toArray(arr) {\n        return Array.prototype.slice.call(arr);\n    }\n\n    function promisifyRequest(request) {\n        return new Promise(function(resolve, reject) {\n            request.onsuccess = function() {\n                resolve(request.result);\n            };\n\n            request.onerror = function() {\n                reject(request.error);\n            };\n        });\n    }\n\n    function promisifyRequestCall(obj, method, args) {\n        var request;\n        var p = new Promise(function(resolve, reject) {\n            request = obj[method].apply(obj, args);\n            promisifyRequest(request).then(resolve, reject);\n        });\n\n        p.request = request;\n        return p;\n    }\n\n    function promisifyCursorRequestCall(obj, method, args) {\n        var p = promisifyRequestCall(obj, method, args);\n        return p.then(function(value) {\n            if (!value) return;\n            return new Cursor(value, p.request);\n        });\n    }\n\n    function proxyProperties(ProxyClass, targetProp, properties) {\n        properties.forEach(function(prop) {\n            Object.defineProperty(ProxyClass.prototype, prop, {\n                get: function() {\n                    return this[targetProp][prop];\n                },\n                set: function(val) {\n                    this[targetProp][prop] = val;\n                }\n            });\n        });\n    }\n\n    function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n        properties.forEach(function(prop) {\n            if (!(prop in Constructor.prototype)) return;\n            ProxyClass.prototype[prop] = function() {\n                return promisifyRequestCall(this[targetProp], prop, arguments);\n            };\n        });\n    }\n\n    function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n        properties.forEach(function(prop) {\n            if (!(prop in Constructor.prototype)) return;\n            ProxyClass.prototype[prop] = function() {\n                return this[targetProp][prop].apply(this[targetProp], arguments);\n            };\n        });\n    }\n\n    function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n        properties.forEach(function(prop) {\n            if (!(prop in Constructor.prototype)) return;\n            ProxyClass.prototype[prop] = function() {\n                return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n            };\n        });\n    }\n\n    function Index(index) {\n        this._index = index;\n    }\n\n    proxyProperties(Index, '_index', [\n        'name',\n        'keyPath',\n        'multiEntry',\n        'unique'\n    ]);\n\n    proxyRequestMethods(Index, '_index', IDBIndex, [\n        'get',\n        'getKey',\n        'getAll',\n        'getAllKeys',\n        'count'\n    ]);\n\n    proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n        'openCursor',\n        'openKeyCursor'\n    ]);\n\n    function Cursor(cursor, request) {\n        this._cursor = cursor;\n        this._request = request;\n    }\n\n    proxyProperties(Cursor, '_cursor', [\n        'direction',\n        'key',\n        'primaryKey',\n        'value'\n    ]);\n\n    proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n        'update',\n        'delete'\n    ]);\n\n    // proxy 'next' methods\n    ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n        if (!(methodName in IDBCursor.prototype)) return;\n        Cursor.prototype[methodName] = function() {\n            var cursor = this;\n            var args = arguments;\n            return Promise.resolve().then(function() {\n                cursor._cursor[methodName].apply(cursor._cursor, args);\n                return promisifyRequest(cursor._request).then(function(value) {\n                    if (!value) return;\n                    return new Cursor(value, cursor._request);\n                });\n            });\n        };\n    });\n\n    function ObjectStore(store) {\n        this._store = store;\n    }\n\n    ObjectStore.prototype.createIndex = function() {\n        return new Index(this._store.createIndex.apply(this._store, arguments));\n    };\n\n    ObjectStore.prototype.index = function() {\n        return new Index(this._store.index.apply(this._store, arguments));\n    };\n\n    proxyProperties(ObjectStore, '_store', [\n        'name',\n        'keyPath',\n        'indexNames',\n        'autoIncrement'\n    ]);\n\n    proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n        'put',\n        'add',\n        'delete',\n        'clear',\n        'get',\n        'getAll',\n        'getKey',\n        'getAllKeys',\n        'count'\n    ]);\n\n    proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n        'openCursor',\n        'openKeyCursor'\n    ]);\n\n    proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n        'deleteIndex'\n    ]);\n\n    function Transaction(idbTransaction) {\n        this._tx = idbTransaction;\n        this.complete = new Promise(function(resolve, reject) {\n            idbTransaction.oncomplete = function() {\n                resolve();\n            };\n            idbTransaction.onerror = function() {\n                reject(idbTransaction.error);\n            };\n            idbTransaction.onabort = function() {\n                reject(idbTransaction.error);\n            };\n        });\n    }\n\n    Transaction.prototype.objectStore = function() {\n        return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n    };\n\n    proxyProperties(Transaction, '_tx', [\n        'objectStoreNames',\n        'mode'\n    ]);\n\n    proxyMethods(Transaction, '_tx', IDBTransaction, [\n        'abort'\n    ]);\n\n    function UpgradeDB(db, oldVersion, transaction) {\n        this._db = db;\n        this.oldVersion = oldVersion;\n        this.transaction = new Transaction(transaction);\n    }\n\n    UpgradeDB.prototype.createObjectStore = function() {\n        return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n    };\n\n    proxyProperties(UpgradeDB, '_db', [\n        'name',\n        'version',\n        'objectStoreNames'\n    ]);\n\n    proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n        'deleteObjectStore',\n        'close'\n    ]);\n\n    function DB(db) {\n        this._db = db;\n    }\n\n    DB.prototype.transaction = function() {\n        return new Transaction(this._db.transaction.apply(this._db, arguments));\n    };\n\n    proxyProperties(DB, '_db', [\n        'name',\n        'version',\n        'objectStoreNames'\n    ]);\n\n    proxyMethods(DB, '_db', IDBDatabase, [\n        'close'\n    ]);\n\n    // Add cursor iterators\n    // TODO: remove this once browsers do the right thing with promises\n    ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n        [ObjectStore, Index].forEach(function(Constructor) {\n            // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n            if (!(funcName in Constructor.prototype)) return;\n\n            Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n                var args = toArray(arguments);\n                var callback = args[args.length - 1];\n                var nativeObject = this._store || this._index;\n                var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n                request.onsuccess = function() {\n                    callback(request.result);\n                };\n            };\n        });\n    });\n\n    // polyfill getAll\n    [Index, ObjectStore].forEach(function(Constructor) {\n        if (Constructor.prototype.getAll) return;\n        Constructor.prototype.getAll = function(query, count) {\n            var instance = this;\n            var items = [];\n\n            return new Promise(function(resolve) {\n                instance.iterateCursor(query, function(cursor) {\n                    if (!cursor) {\n                        resolve(items);\n                        return;\n                    }\n                    items.push(cursor.value);\n\n                    if (count !== undefined && items.length == count) {\n                        resolve(items);\n                        return;\n                    }\n                    cursor.continue();\n                });\n            });\n        };\n    });\n\n    var exp = {\n        open: function(name, version, upgradeCallback) {\n            var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n            var request = p.request;\n\n            request.onupgradeneeded = function(event) {\n                if (upgradeCallback) {\n                    upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n                }\n            };\n\n            return p.then(function(db) {\n                return new DB(db);\n            });\n        },\n        delete: function(name) {\n            return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n        }\n    };\n\n    if (typeof module !== 'undefined') {\n        module.exports = exp;\n        module.exports.default = module.exports;\n    } else {\n        self.idb = exp;\n    }\n}());"]}